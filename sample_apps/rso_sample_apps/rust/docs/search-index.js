var searchIndex = new Map(JSON.parse('[\
["riot_rso_sample_app",{"doc":"","t":"FNNNNNNCONNNNNCNHCNNNNNFFFFFFOOONONNNNNNNNNNNNONOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHONNNNNNONONNNNNNONNNNNNNNNNNNNNNNNNNOFNNCCNNNCNNNFFFFOOHONNNNNNNNOHONNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNOHNNNNOONONNNNNNONNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNHNNNONNNNNNFFONNNNNNNNONNNNNONNNNNNNNHONNNONONNNNNNONNNNNNHH","n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","config","config","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","handlers","into","main","service","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","Api","Configuration","Rso","Server","Tls","Urls","account_data","addr","api","authorize_url","base_url","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback_host","callback_url","cert","champion_data","client_id","client_secret","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","key","parse","rso","serialize","serialize","serialize","serialize","serialize","serialize","server","sign_in_url","tls","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token","token_url","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","urls","HtmlTemplate","borrow","borrow_mut","data","default","from","into","into_response","oauth","try_from","try_into","type_id","AccountData","ChampionRotationData","Request","Response","access_token","account","account_data","account_data","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","champion_rotation","champion_rotation_data","champion_rotation_data","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","dyn_render","dyn_render_into","dyn_write_into","extension","fmt","fmt","fmt","fmt","fmt","fmt","free_champion_ids","free_champion_ids_for_new_players","from","from","from","from","from_ref","from_ref","from_ref","from_ref","game_name","handle","into","into","into","into","max_new_player_level","message","mime_type","puuid","render_into","serialize","serialize","serialize","serialize","size_hint","tag_line","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Response","borrow","borrow_mut","clone","clone_into","dyn_render","dyn_render_into","dyn_write_into","extension","fmt","from","from_ref","handle","into","mime_type","render_into","sign_in_url","size_hint","to_owned","to_string","try_from","try_into","type_id","Request","Response","access_token","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code","deserialize","deserialize","dyn_render","dyn_render_into","dyn_write_into","expires_in","extension","fmt","fmt","fmt","from","from","from_ref","from_ref","handle","id_token","into","into","mime_type","refresh_token","render_into","scope","serialize","serialize","size_hint","to_owned","to_owned","to_string","token_type","try_from","try_from","try_into","try_into","type_id","type_id","create_app","listen"],"q":[[0,"riot_rso_sample_app"],[23,"riot_rso_sample_app::config"],[140,"riot_rso_sample_app::handlers"],[152,"riot_rso_sample_app::handlers::data"],[239,"riot_rso_sample_app::handlers::default"],[262,"riot_rso_sample_app::handlers::oauth"],[309,"riot_rso_sample_app::service"],[311,"clap_builder::builder::command"],[312,"core::fmt"],[313,"core::fmt"],[314,"clap_builder"],[315,"core::result"],[316,"clap_builder::util::id"],[317,"core::option"],[318,"core::any"],[319,"alloc::string"],[320,"serde::de"],[321,"config::config"],[322,"serde::ser"],[323,"axum_core::response"],[324,"askama"],[325,"askama::error"],[326,"core::fmt"],[327,"std::io::error"],[328,"axum::extract::query"],[329,"axum::extract::state"],[330,"axum_core::response::into_response"],[331,"askama::error"],[332,"axum::routing"]],"d":["Struct containing the command line arguments.","","","","","","","","Path to the configuration file.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","The main entry point for the program.","","","","","","","Configuration for API endpoints.","Main configuration structure for the application.","OAuth client configuration.","Configuration for the server, including address and …","Represents the TLS configuration for the server.","URLs for the API endpoints.","Endpoint for retrieving account data.","The server’s address in the format <code>ip:port</code>.","API endpoint configurations.","Constructs the authorization endpoint URL.","Base URL for the OAuth provider.","","","","","","","","","","","","","Host to which the OAuth provider will redirect after …","Constructs the callback URL for OAuth provider redirection.","The TLS certificate","Endpoint for retrieving champion data.","Client ID for OAuth authentication.","Client secret for OAuth authentication.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The TLS key","Parses the application configuration from a file and …","OAuth client configuration.","","","","","","","Server configuration, including address and TLS settings.","Constructs the sign-in URL with query parameters for OAuth …","Optional TLS configuration for secure connections.","","","","","","","Token for API authentication.","Constructs the token endpoint URL.","","","","","","","","","","","","","","","","","","","URLs for different API endpoints.","A wrapper struct for Askama templates to facilitate their …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Converts the contained Askama template into an Axum …","","","","","AccountData represents the account data of a user","This ChampionRotationData struct represents the champion …","Represents a request containing an access token.","Represents the response sent to the client for data …","The access token that was given to us after the user …","The account data retrieved for the user. Contains …","Fetches the account data for a user.","A serialized JSON string of the account data. This is a …","","","","","","","","","The champion rotation data retrieved from the game server. …","Fetches the champion rotation data.","A serialized JSON string of the champion rotation data. …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Handles data requests by fetching account and champion …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","An optional message that can be included in the response. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents the server’s response to a request with a …","","","","","","","","","","Returns the argument unchanged.","","Handles requests by generating a response with a sign-in …","Calls <code>U::from(self)</code>.","","","The URL to which the user should be redirected for signing …","","","","","","","Represents an OAuth request containing a code.","Represents the OAuth2 response returned from the …","The OAuth2 access token.","","","","","","","","","The authorization code provided by the OAuth provider.","","","","","","The OAuth2 expiration time in seconds.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Handles incoming OAuth requests by exchanging the …","The OAuth2 ID token.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The  OAuth2 refresh token.","","The OAuth2 scope.","","","","","","","The OAuth2 token type.","","","","","","","Creates an instance of <code>Router</code> configured with routes and …","Starts the web service with the provided configuration."],"i":[0,2,2,2,2,2,2,0,2,2,2,2,2,2,0,2,0,0,2,2,2,2,2,0,0,0,0,0,0,18,15,12,12,16,14,15,12,16,17,18,14,15,12,16,17,18,16,12,14,18,16,16,14,15,12,16,17,18,14,15,12,16,17,18,14,15,12,16,17,18,14,15,12,16,17,18,14,15,12,16,17,18,14,15,12,12,16,17,18,14,15,12,16,17,18,14,15,12,16,17,18,14,0,12,14,15,12,16,17,18,12,12,15,14,15,12,16,17,18,17,12,14,15,12,16,17,18,14,15,12,16,17,18,14,15,12,16,17,18,17,0,23,23,0,0,23,23,23,0,23,23,23,0,0,0,0,29,30,0,30,27,28,29,30,27,28,29,30,30,0,30,27,28,29,30,27,28,29,30,27,28,29,30,30,30,30,30,27,27,28,28,29,30,28,28,27,28,29,30,27,28,29,30,27,0,27,28,29,30,28,30,30,27,30,27,28,29,30,30,27,27,28,29,30,27,28,30,27,28,29,30,27,28,29,30,27,28,29,30,0,41,41,41,41,41,41,41,41,41,41,41,0,41,41,41,41,41,41,41,41,41,41,0,0,43,42,43,42,43,42,43,42,43,42,42,43,43,43,43,43,43,42,43,43,42,43,42,43,0,43,42,43,43,43,43,43,42,43,43,42,43,43,43,42,43,42,43,42,43,0,0],"f":"`{bb}0{ce{}{}}0{{}b}0``{{df}h}{cc{}}{j{{n{dl}}}}0{{}{{Ab{A`}}}}`5{{}Ad}`{c{{n{e}}}{}{}}0{cAf{}}{{dj}{{n{Adl}}}}0`````````{AhAj}`::::::::::::`0````{AlAl}{AnAn}{AhAh}{B`B`}{BbBb}{BdBd}{{ce}Ad{}{}}00000{c{{n{Al}}}Bf}{c{{n{An}}}Bf}{c{{n{Ah}}}Bf}{c{{n{B`}}}Bf}{c{{n{Bb}}}Bf}{c{{n{Bd}}}Bf}{{AlAl}Bh}{{AnAn}Bh}{{AhAh}Bh}{{B`B`}Bh}{{BbBb}Bh}{{BdBd}Bh}{{Alf}h}{{Anf}h}{{Ahf}h}{{B`f}h}{{Bbf}h}{{Bdf}h}{cc{}}0{BjAh}1111111111{ce{}{}}00000`{Aj{{n{AhAj}}}}`{{Alc}nBl}{{Anc}nBl}{{Ahc}nBl}{{B`c}nBl}{{Bbc}nBl}{{Bdc}nBl}`{AhAj}`888888`0{c{{n{e}}}{}{}}00000000000{cAf{}}00000``::``<:{{{Bn{c}}}C`Cb}`221``````{{CdCd}{{n{CfAj}}}}`<<<<<<<<`{{CdCd}{{n{ChAj}}}}`{CfCf}{ChCh}{CjCj}{ClCl}{{ce}Ad{}{}}000{c{{n{Cf}}}Bf}{c{{n{Ch}}}Bf}{c{{n{Cj}}}Bf}{c{{n{Cl}}}Bf}{c{{n{AjCn}}}{}}{{cD`}{{n{AdCn}}}{}}{{cDb}{{n{AdDd}}}{}}{c{{Ab{Cd}}}{}}{{Cff}h}0{{Chf}h}0{{Cjf}h}{{Clf}h}``{cc{}}0000000`{{{Df{Cj}}{Dh{Ah}}}{{`{Dj}}}}{ce{}{}}000``{cCd{}}`{{Clc}{{Dl{Ad}}}{D`Dn}}{{Cfc}nBl}{{Chc}nBl}{{Cjc}nBl}{{Clc}nBl}{cE`{}}`7777{cAj{}}00{c{{n{e}}}{}{}}0000000{cAf{}}000`::{EbEb}{{ce}Ad{}{}}{c{{n{AjCn}}}{}}{{cD`}{{n{AdCn}}}{}}{{cDb}{{n{AdDd}}}{}}{c{{Ab{Cd}}}{}}{{Ebf}h}{cc{}}0{{{Dh{Ah}}}{{`{Dj}}}}{ce{}{}}{cCd{}}{{Ebc}{{Dl{Ad}}}{D`Dn}}`?2>==<```2222{EdEd}{EfEf}<<`{c{{n{Ed}}}Bf}{c{{n{Ef}}}Bf}=<;`:{{Edf}h}{{Eff}h}0::::{{{Df{Ed}}{Dh{Ah}}}{{`{Dj}}}}`998`{{Efc}{{Dl{Ad}}}{D`Dn}}`{{Edc}nBl}{{Efc}nBl}{cE`{}}=={cAj{}}`{c{{n{e}}}{}{}}000{cAf{}}0{AhEh}{AhAd}","c":[],"p":[[5,"Command",311],[5,"Args",0],[5,"Formatter",312],[8,"Result",312],[5,"ArgMatches",313],[8,"Error",314],[6,"Result",315],[5,"Id",316],[6,"Option",317],[1,"unit"],[5,"TypeId",318],[5,"Configuration",23],[5,"String",319],[5,"Tls",23],[5,"Server",23],[5,"Rso",23],[5,"Api",23],[5,"Urls",23],[10,"Deserializer",320],[1,"bool"],[5,"Config",321],[10,"Serializer",322],[5,"HtmlTemplate",140],[8,"Response",323],[10,"Template",324],[1,"str"],[5,"AccountData",152],[5,"ChampionRotationData",152],[5,"Request",152],[5,"Response",152],[6,"Error",325],[10,"Write",312],[10,"Write",326],[5,"Error",327],[5,"Query",328],[5,"State",329],[10,"IntoResponse",330],[8,"Result",325],[10,"Sized",331],[1,"usize"],[5,"Response",239],[5,"Request",262],[5,"Response",262],[5,"Router",332]],"b":[[187,"impl-Debug-for-AccountData"],[188,"impl-Display-for-AccountData"],[189,"impl-Debug-for-ChampionRotationData"],[190,"impl-Display-for-ChampionRotationData"],[282,"impl-Display-for-Response"],[283,"impl-Debug-for-Response"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
